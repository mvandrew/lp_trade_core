// Generated by CoffeeScript 1.12.5
(function() {
  (function($) {
    var getGoalData, popupCallbackChangeOperator, popupItemsInit, popupToggleForm;
    window.setCountDown = function() {
      if ($(".timer").length > 0 || $(".countbox").length > 0) {
        return setInterval(function() {
          var dateNow, hours, hours1, hours2, hoursStr, mins, mins1, mins2, minsStr, resHtml, secs, secs1, secs2, secsStr;
          dateNow = new Date();
          hours = 23 - dateNow.getHours();
          mins = 59 - dateNow.getMinutes();
          secs = 59 - dateNow.getSeconds();
          hoursStr = hours < 10 ? "0" + hours.toString() : hours.toString();
          minsStr = mins < 10 ? "0" + mins.toString() : mins.toString();
          secsStr = secs < 10 ? "0" + secs.toString() : secs.toString();
          hours1 = hours < 10 ? "0" : hours.toString().charAt(0);
          hours2 = hours < 10 ? hours.toString().charAt(0) : hours.toString().charAt(1);
          mins1 = mins < 10 ? "0" : mins.toString().charAt(0);
          mins2 = mins < 10 ? mins.toString().charAt(0) : mins.toString().charAt(1);
          secs1 = secs < 10 ? "0" : secs.toString().charAt(0);
          secs2 = secs < 10 ? secs.toString().charAt(0) : secs.toString().charAt(1);
          resHtml = "<div class='countbox-num'><div class='countbox-hours1'><span></span>" + hours1 + "</div><div class='countbox-hours2'><span></span>" + hours2 + "</div><div class='countbox-hours-text'>часов</div></div>" + "</div><div class='countbox-hours-text'></div></div>" + "<div class='countbox-space'></div>" + "<div class='countbox-num'><div class='countbox-mins1'><span></span>" + mins1 + "</div><div class='countbox-mins2'><span></span>" + mins2 + "</div><div class='countbox-mins-text'>минут</div></div>" + "</div><div class='countbox-mins-text'></div></div>" + "<div class='countbox-space'></div>" + "<div class='countbox-num'><div class='countbox-secs1'><span></span>" + secs1 + "</div><div class='countbox-secs2'><span></span>" + secs2 + "</div><div class='countbox-secs-text'>секунд</div></div>";
          if ($(".timer").length > 0) {
            $(".timer .hours").text(hoursStr);
            $(".timer .minutes").text(minsStr);
            $(".timer .seconds").text(secsStr);
          }
          return $(".countbox").each(function() {
            return this.innerHTML = resHtml;
          });
        }, 1e3);
      }
    };
    window.anchorAnimate = function() {
      return $("a[href^='#']").on("click", function(event) {
        var hrefValue;
        hrefValue = $(this).attr("href");
        $("html, body").animate({
          scrollTop: $(hrefValue).offset().top + "px"
        });
        return event.preventDefault();
      });
    };
    window.youtubeContainer = function() {
      return $(".youtube").each(function() {
        var youControl, youThumb;
        youThumb = document.createElement("img");
        youThumb.setAttribute("src", "http://i.ytimg.com/vi/" + this.id + "/hqdefault.jpg");
        youThumb.setAttribute("class", "thumb");
        youControl = document.createElement("div");
        youControl.setAttribute("class", "play");
        this.appendChild(youThumb);
        this.appendChild(youControl);
        return $(this).on("click", function(event) {
          var youFrame;
          youFrame = document.createElement("iframe");
          youFrame.setAttribute("src", "https://www.youtube.com/embed/" + this.id + "?autoplay=1&autohide=1&border=0&wmode=opaque&enablejsapi=1");
          youFrame.setAttribute("allowfullscreen", "");
          youFrame.style.width = this.style.width;
          youFrame.style.height = this.style.height;
          return this.parentNode.replaceChild(youFrame, this);
        });
      });
    };
    window.robotTest = function() {
      return setTimeout(function() {
        var dateNow;
        dateNow = new Date();
        return $("form.order_form").each(function() {
          var curDay, curDayStr, curMonth, curMonthStr, modeField;
          modeField = document.createElement("input");
          modeField.name = "mode";
          modeField.setAttribute("type", "hidden");
          curMonth = dateNow.getMonth() + 1;
          curMonthStr = curMonth < 10 ? "0" + curMonth.toString() : curMonth.toString();
          curDay = dateNow.getDate();
          curDayStr = curDay < 10 ? "0" + curDay.toString() : curDay.toString();
          modeField.setAttribute("value", dateNow.getFullYear().toString() + curMonthStr + curDayStr);
          return this.appendChild(modeField);
        });
      }, 3e3);
    };
    window.validateOrderForm = function() {
      return $("form.order_form").on("submit", function(event) {
        var testResult;
        testResult = true;
        if (this.name.value === "") {
          alert("Введите Ваше имя");
          testResult = false;
        }
        if (this.phone.value === "") {
          alert("Введите Ваш номер телефона");
          testResult = false;
        }
        return testResult;
      });
    };
    window.checkMobile = function() {
      var mobURL;
      if (window.device.mobile()) {
        mobURL = "http://fly-bra.eldoradosale.ru/mob1/" + document.location.search;
        return window.location.replace(mobURL);
      }
    };
    getGoalData = function() {
      return $.getJSON("/get_data.php", function(data) {
        window.goalData = [];
        return $.each(data, function(key, value) {
          return window.goalData[key] = value;
        });
      });
    };
    getGoalData();
    popupToggleForm = function() {
      if ($(".pp_wrapper").css("display") === "none") {
        return $(".pp_wrapper").fadeIn(300, function() {
          return $(".pp_form").fadeIn(500);
        });
      } else {
        return $(".pp_form").fadeOut(500, function() {
          return $(".pp_wrapper").fadeOut(300);
        });
      }
    };
    popupItemsInit = function() {
      var callback_enabled, callback_gender, callback_timeout, comebacker_enabled, err;
      try {
        callback_enabled = window.pop_callback_enabled;
      } catch (error) {
        err = error;
        callback_enabled = false;
      }
      try {
        callback_timeout = window.pop_callback_timeout;
      } catch (error) {
        err = error;
        callback_timeout = 1e3;
      }
      try {
        callback_gender = window.pop_callback_gender;
      } catch (error) {
        err = error;
        callback_gender = 0;
      }
      try {
        comebacker_enabled = window.pop_popup_enabled;
      } catch (error) {
        err = error;
        comebacker_enabled = false;
      }
      if (callback_enabled || comebacker_enabled) {
        $(".pp_close").on("click", function(eventData) {
          popupToggleForm();
          return eventData.preventDefault();
        });
      }
      if (comebacker_enabled) {
        $(window).on("mouseout", function(eventData) {
          var res;
          if ($(".pp_wrapper").css("display") === "none" && eventData.pageY - $(window).scrollTop() < 1) {
            popupToggleForm();
            return res = false;
          }
        });
      }
      if (callback_enabled) {
        window.popupOperatorId = -1;
        window.popupOperatorCount = 0;
        $(".pop_call_cont").on("click", function(eventData) {
          return popupToggleForm();
        });
        return setTimeout(function() {
          popupCallbackChangeOperator();
          $("#pop_callback_button").fadeIn();
          return setInterval(function() {
            popupCallbackChangeOperator();
            return $(".pop_call_cont").toggleClass("pop_call_spinner");
          }, 3e3);
        }, callback_timeout);
      }
    };
    popupCallbackChangeOperator = function() {
      var curOperator, imageUrl, operatorAmount;
      if ($(".pop_call_cont").hasClass("pop_call_spinner")) {
        if (window.popupOperatorCount < 1) {
          window.popupOperatorCount = Math.floor(Math.random() * 4) + 2;
          operatorAmount = pop_callback_gender === 0 ? 6 : 3;
          curOperator = Math.floor(Math.random() * operatorAmount) + (pop_callback_gender === 2 ? 3 : 1);
          if (curOperator === window.popupOperatorId) {
            curOperator++;
          }
          if (curOperator > 6) {
            curOperator = pop_callback_gender === 2 ? 3 : 1;
          }
          window.popupOperatorId = curOperator;
          imageUrl = 'url("/images/call-phone-' + window.popupOperatorId.toString() + '.png")';
          return $(".pop_call_front").css("background-image", imageUrl);
        } else {
          return window.popupOperatorCount--;
        }
      }
    };
    return popupItemsInit();
  })(jQuery);

}).call(this);
